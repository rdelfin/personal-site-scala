#set (name)
Twitcher - Project
#end

#set (title)
Twitcher - Project
#end

#set (bodyElem)
<div class="jumbotron">
  <h1>Robot Car</h1>
  <p>I've been working on a small robot car, running on a Raspberry Pi, running the
     Robot Operating System (ROS).</p>
</div>

<div class="row">
  <div class="col-md-4">
    <h2>Want to look at the code?</h2>
    <p>You can find it here!</p>
    <p><a href="https://github.com/rdelfin/robot_car_controllers" class="btn btn-default">Controllers! &raquo;</a></p>
  </div>

  <div class="col-md-4">
    <h2>How does the software work?</h2>
    <p>The software for this car is written in C++ for the Robot Operating System (ROS). In this
       system, you can create separate programs called <em>nodes</em>. They all communicate through
       defined topics and services.</p>
    <p>This car has a node that sends commands directly to the motor controllers and creates a
       service that sets the speed and direction settings for each motor. A separate node uses
       that service to provide a drive service, where you can provide a direction and speed for
       the entire car.</p>
    <p>The great thing about ROS is you can add all sorts of services and make them entirely modular
       and detached. These nodes can create a topic for encoders, ultrasonic sensors, more motors,
       an HTTP client for twitter, you name it!</p>
  </div>
  <div class="col-md-4">
    <h2>How does the hardware work?</h2>
    <p>The motors are a standard set of <a href="https://www.sparkfun.com/products/13302">Sparkfun
       hobby gearmotors</a>. these are controller by two,
       <a href="https://www.sparkfun.com/products/9457">Sparkfun tb6612fng motor controllers</a>.
       These are hooked up directly to the Raspberry Pi output pins, and controlled using software
       PWM.</p>
    <p>The power was an interesting challenge. There are two power sources for the robot: One used
       by the motors and the controllers (motor power), the other used by the Raspberry Pi (main
       power). The first is provided by a single 9V battery. The second is powered by a cellphone
       battery pack, mostly because Raspberry Pi's were not technically designed by a regular battery
       and so can only be provided power through their micro-USB port. Yay bodging!</p>
  </div>
</div>

<div class="row">
  <div class="col-md-8">
    <h2>Pictures!</h2>
  </div>
  <div class="col-md-4">
    <h2>Kit of Parts</h2>
    <p>Want to build one yourself? Click the link bellow to see full kit of parts!</p>
  <p><a href="#" class="btn btn-default">Click here! &raquo;</a></p>
  </div>
</div>
#end